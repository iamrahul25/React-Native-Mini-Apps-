//Status Bar Notification using "expo-notifications" and "expo-device" library. 

//Code App.js
import React, { useState, useEffect, useRef } from 'react';
import { Text, View, Button, Platform, StyleSheet } from 'react-native';
import * as Device from 'expo-device';
import * as Notifications from 'expo-notifications';
import Constants from 'expo-constants';
import { LightSensor } from 'expo-sensors';

Notifications.setNotificationHandler({
  handleNotification: async () => ({
    shouldShowAlert: true,
    shouldPlaySound: false,
    shouldSetBadge: false,
  }),
});

export default function App() {
  const [notification, setNotification] = useState(undefined);
  const [illuminance, setIlluminance] = useState(0);
  const notificationListener = useRef();
  const responseListener = useRef();

  useEffect(() => {

    if (Platform.OS === 'android') {
      Notifications.getNotificationChannelsAsync().then(value => setChannels(value ?? []));
    }

    notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
      setNotification(notification);
    });

    responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {
      console.log(response);
    });

    return () => {
      notificationListener.current && Notifications.removeNotificationSubscription(notificationListener.current);
      responseListener.current && Notifications.removeNotificationSubscription(responseListener.current);
    };
  }, []);

  useEffect(() => {
    const subscription = LightSensor.addListener(sensorData => {
      setIlluminance(sensorData.illuminance);
    });

    LightSensor.setUpdateInterval(1000); // Update every 1 second

    return () => subscription && subscription.remove();
  }, []);

  useEffect(() => {
    if (illuminance < 50) {
      schedulePushNotification();
    }
  }, [illuminance]);

  return (
    <View style={styles.container}>
      <View style={{ alignItems: 'center', justifyContent: 'center' }}>
      </View>
      <Text style={styles.text}>
        {illuminance < 50 ? "🌃 It's Night time" : "☀️ It's Day time"}
      </Text>
      <Text style={styles.text}>
        Illuminance: {Platform.OS === 'android' ? `${illuminance} lx` : 'Only available on Android'}
      </Text>
    </View>
  );
}

async function schedulePushNotification() {
  await Notifications.scheduleNotificationAsync({
    content: {
      title: "🌃 It's Night Time",
      body: 'The illuminance level is below 50 lx.',
      data: { data: 'night_time' },
    },
    trigger: { seconds: 1 },
  });
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 10,
  },
  text: {
    textAlign: 'center',
    fontSize: 18,
    marginVertical: 10,
  },
});

